<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>disable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>client-app\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <DockerDefaultTargetOS>Windows</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.0" />
        <PackageReference Include="CloudinaryDotNet" Version="1.20.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="11.2.2" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="11.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.Http.Features" Version="5.0.17" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="7.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.3" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.3" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="7.0.3" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    </ItemGroup>

<!--    <ItemGroup>-->
<!--        &lt;!&ndash; Don't publish the SPA source files, but do show them in the project files list &ndash;&gt;-->
<!--        <Content Remove="$(SpaRoot)**" />-->
<!--        <Content Include="client-app\src\tsconfig.json" />-->
<!--        <None Remove="$(SpaRoot)**" />-->
<!--        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />-->
<!--    </ItemGroup>-->

<!--    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">-->
<!--        &lt;!&ndash; Ensure Node.js is installed &ndash;&gt;-->
<!--        <Exec Command="node &#45;&#45;version" ContinueOnError="true">-->
<!--            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />-->
<!--        </Exec>-->
<!--        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />-->
<!--        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--    </Target>-->

<!--    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
<!--        &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />-->

<!--        &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;-->
<!--        <ItemGroup>-->
<!--            <DistFiles Include="$(SpaRoot)build\**" />-->
<!--            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
<!--                <RelativePath>%(DistFiles.Identity)</RelativePath>-->
<!--                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
<!--                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
<!--            </ResolvedFileToPublish>-->
<!--        </ItemGroup>-->
<!--    </Target>-->

</Project>
